import org.jetbrains.kotlin.gradle.dsl.JvmTarget

import java.text.SimpleDateFormat

buildscript {
    apply from: "${project.rootDir}/dependencies.gradle"

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath gradlePlugins.kotlin,
                gradlePlugins.pitest
    }
}

allprojects {
    defaultTasks "clean", "build", "jacocoTestReport", "pitest"
}

static def buildTimeStamp() {
    return new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date())
}

subprojects {

    apply from: "${project.rootDir}/dependencies.gradle"
    apply plugin: "kotlin"
    apply plugin: "jacoco"
    apply plugin: "info.solidsoft.pitest"

    group = "org.suggs.fsm"

    repositories {
        mavenCentral()
    }

    jar {
        archiveVersion = "${buildTimeStamp()}"
    }

    dependencies {
        implementation libs.kotlin,
                libs.kotlinReflect,
                libs.slf4j

        testImplementation libs.test.junitApi,
                libs.test.kotestAssertions,
                libs.test.mockito

        testRuntimeOnly libs.test.junitEngine,
                libs.logback
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    compileKotlin {
        compilerOptions {
            jvmTarget = JvmTarget.JVM_21
        }
    }

    compileTestKotlin {
        compilerOptions {
            jvmTarget = JvmTarget.JVM_21
        }
    }

    test {
        useJUnitPlatform()

        finalizedBy jacocoTestReport

        testLogging {
            afterSuite { desc, result ->
                if (!desc.parent) {
                    new File(layout.buildDirectory.get().asFile, "/jacoco/test-results.json").text =
                            "{\n" +
                                    "\"result\": \"${result.resultType}\", \n" +
                                    "\"tests\": \"${result.testCount}\", \n" +
                                    "\"passed\": \"${result.successfulTestCount}\", \n" +
                                    "\"failed\": \"${result.failedTestCount}\", \n" +
                                    "\"skipped\": \"${result.skippedTestCount}\"\n" +
                                    "}"
                }

            }
        }
    }

    pitest {
        threads = 4
        junit5PluginVersion = "1.2.1"
        failWhenNoMutations = false
    }

}
